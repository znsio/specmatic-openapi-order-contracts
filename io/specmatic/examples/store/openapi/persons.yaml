openapi: 3.0.0
info:
  title: Primitive Types Example
  version: 1.0.0

paths:
  /vip-persons:
    post:
      summary: Create a person
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PersonInput"
            examples:
              vip_persons_POST_201-with-response-id-11111111:
                value:
                  name: John Doe
                  age: 35
                  height: 1.78
                  weight: 80.5
                  isStudent: true
                  email: john.doe@example.com
              vip_persons_POST_201-with-response-id-11111112:
                value:
                  name: John Doe
                  age: 35
                  height: 1.78
                  weight: 80.5
                  isStudent: true
                  email: john.doe@example.com
              vip_persons_POST_201_02:
                value:
                  name: Naresh Jain
                  age: 35
                  height: 1.78
                  weight: 80.5
                  isStudent: true
                  email: naresh.jain@example.com
      responses:
        "201":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PersonResponse"
              examples:
                vip_persons_POST_201-with-response-id-11111111:
                  value:
                    id: 11111111
                vip_persons_POST_201-with-response-id-11111112:
                  value:
                    id: 11111112
                vip_persons_POST_201_02:
                  value:
                    id: 22222222
  /persons:
    post:
      summary: Create a person
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PersonInput"
            examples:
              persons_POST_201-with-response-id-1111:
                value:
                  name: John Doe
                  age: 35
                  height: 1.78
                  weight: 80.5
                  isStudent: true
                  email: john.doe@example.com
              persons_POST_201-with-response-id-1112:
                value:
                  name: John Doe
                  age: 35
                  height: 1.78
                  weight: 80.5
                  isStudent: true
                  email: john.doe@example.com
              persons_POST_201_02:
                value:
                  name: Naresh Jain
                  age: 35
                  height: 1.78
                  weight: 80.5
                  isStudent: true
                  email: naresh.jain@example.com
      responses:
        "201":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PersonResponse"
              examples:
                persons_POST_201-with-response-id-1111:
                  value:
                    id: 1111
                persons_POST_201-with-response-id-1112:
                  value:
                    id: 1112
                persons_POST_201_02:
                  value:
                    id: 2222
    get:
      summary: Get all persons
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Person"
              examples:
                person-list-example:
                  value:
                    - id: 1
                      name: John Doe
                      age: 35
                      height: 1.78
                      weight: 80.5
                      isStudent: true
                      email: john.doe@example.com
                    - id: 2
                      name: Jane Smith
                      age: 28
                      height: 1.65
                      weight: 60.0
                      isStudent: false
                      email: jane.smith@example.com
  /persons/{id}:
    get:
      summary: Get a person by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Person"

components:
  schemas:
    PersonInput:
      type: object
      properties:
        name:
          type: string
        age:
          type: integer
          format: int32
        height:
          type: number
          format: float
        weight:
          type: number
          format: double
        isStudent:
          type: boolean
        email:
          type: string
          format: email
    PersonResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
    Person:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        age:
          type: integer
          format: int32
        height:
          type: number
          format: float
        weight:
          type: number
          format: double
        isStudent:
          type: boolean
        email:
          type: string
          format: email
