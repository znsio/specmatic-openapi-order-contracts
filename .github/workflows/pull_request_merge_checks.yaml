name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    name: Check Duplicate Examples
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Get changed yaml files
        id: changed-files-specific
        uses: tj-actions/changed-files@v34
        with:
          files: |
            io/**/*.yaml
            io/**/*.yml
            io/**/*.json
          files_ignore: kafka.yaml

      - name: Install Spectral Linter
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        run: npm install -g @stoplight/spectral-cli

      - name: Run Spectral linter on changed files
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        run: |
          echo "Running Spectral linter on: ${{ steps.changed-files-specific.outputs.all_changed_files }}"
          spectral lint io/**/*.yaml

      - name: Create environment file
        run: |
            # echo "GITHUB_REF=${{ github.ref }}" >> env.list
            echo "GITHUB_SHA=${{ github.sha }}" >> env.list
            echo "GITHUB_REPOSITORY=${{ github.repository }}" >> env.list
            echo "GITHUB_ACTOR=${{ github.actor }}" >> env.list
            echo "GITHUB_WORKFLOW=${{ github.workflow }}" >> env.list
            echo "GITHUB_HEAD_REF=${{ github.head_ref }}" >> env.list
            if [ -z "${{ github.base_ref }}" ]; then
                echo "GITHUB_BASE_REF=${{ github.ref }}" | sed 's/refs\/heads\///' >> env.list
            else
              echo "GITHUB_BASE_REF=${{ github.base_ref }}" >> env.list
            fi     

      - name: Docker login
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Validate OpenAPI examples with lenient check for duplicate examples
        run: |
          docker run -v "$(pwd):/repo:rw" \
            --env-file env.list \
            ghcr.io/znsio/specmatic-openapi:0.4.1 examples validate --specs-dir=/repo/io/specmatic/examples/store/openapi --competing-example-detection=LENIENT

      - name: Validate OpenAPI examples with strict check for duplicate examples (default)
        run: |
          docker run -v "$(pwd):/repo:rw" \
            --env-file env.list \
            ghcr.io/znsio/specmatic-openapi:0.4.1-snapshot examples validate --specs-dir=/repo/io/specmatic/examples/store/openapi
